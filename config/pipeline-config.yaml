# Healthcare Claims Pipeline Configuration

## Environment-specific Settings

environments:
  dev:
    glue_max_capacity: 10
    lambda_memory_size: 512
    lambda_timeout: 300
    s3_lifecycle_standard_ia_days: 30
    s3_lifecycle_glacier_days: 90
    log_retention_days: 7
    backup_retention_days: 7
    monitoring_email: "dev-team@company.com"
    
  staging:
    glue_max_capacity: 50
    lambda_memory_size: 1024
    lambda_timeout: 600
    s3_lifecycle_standard_ia_days: 30
    s3_lifecycle_glacier_days: 90
    log_retention_days: 30
    backup_retention_days: 30
    monitoring_email: "staging-team@company.com"
    
  prod:
    glue_max_capacity: 200
    lambda_memory_size: 2048
    lambda_timeout: 900
    s3_lifecycle_standard_ia_days: 30
    s3_lifecycle_glacier_days: 90
    s3_lifecycle_deep_archive_days: 365
    log_retention_days: 365
    backup_retention_days: 90
    monitoring_email: "prod-alerts@company.com"

## Data Processing Configuration

data_processing:
  # File size thresholds for different processing strategies
  file_size_thresholds:
    small: 100_000_000      # 100MB
    medium: 1_000_000_000   # 1GB
    large: 10_000_000_000   # 10GB
  
  # Partition configuration based on file size
  partition_strategy:
    small: 10
    medium: 50
    large: 200
  
  # Supported file formats
  supported_formats:
    - csv
    - json
    - parquet
    - avro
  
  # Data validation rules
  validation_rules:
    required_fields:
      - claim_id
      - patient_id
      - provider_id
      - service_date
      - diagnosis_code
      - procedure_code
      - amount
      - status
    
    field_patterns:
      claim_id: "^CLM[0-9]{8,12}$"
      patient_id: "^PAT[0-9]{6,10}$"
      provider_id: "^PRV[0-9]{6,8}$"
      diagnosis_code: "^[A-Z][0-9]{2}\\.[0-9X]{1,3}$"
      procedure_code: "^[0-9]{5}$"
      amount: "^\\d+\\.\\d{2}$"
    
    amount_thresholds:
      min_amount: 0.01
      max_amount: 1_000_000.00
      warning_threshold: 50_000.00
    
    date_validation:
      max_future_days: 30
      max_past_years: 10

## Performance Optimization

performance:
  # Spark configuration for different environments
  spark_config:
    dev:
      spark.sql.adaptive.enabled: "true"
      spark.sql.adaptive.coalescePartitions.enabled: "true"
      spark.sql.adaptive.advisoryPartitionSizeInBytes: "128MB"
      spark.serializer: "org.apache.spark.serializer.KryoSerializer"
    
    staging:
      spark.sql.adaptive.enabled: "true"
      spark.sql.adaptive.coalescePartitions.enabled: "true"
      spark.sql.adaptive.advisoryPartitionSizeInBytes: "256MB"
      spark.sql.adaptive.skewJoin.enabled: "true"
      spark.serializer: "org.apache.spark.serializer.KryoSerializer"
      spark.sql.execution.arrow.pyspark.enabled: "true"
    
    prod:
      spark.sql.adaptive.enabled: "true"
      spark.sql.adaptive.coalescePartitions.enabled: "true"
      spark.sql.adaptive.advisoryPartitionSizeInBytes: "256MB"
      spark.sql.adaptive.skewJoin.enabled: "true"
      spark.sql.adaptive.localShuffleReader.enabled: "true"
      spark.serializer: "org.apache.spark.serializer.KryoSerializer"
      spark.sql.execution.arrow.pyspark.enabled: "true"
      spark.sql.adaptive.optimizeSkewsInRebalancePartitions.enabled: "true"

## Security Configuration

security:
  # Encryption settings
  encryption:
    s3_encryption: "AES256"
    sns_encryption: "aws/sns"
    cloudwatch_encryption: "aws/logs"
  
  # IAM role configuration
  iam_roles:
    lambda_execution:
      managed_policies:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      custom_policies:
        - s3_data_access
        - sns_publish
        - glue_job_execution
        - cloudwatch_logs
    
    glue_service:
      managed_policies:
        - "arn:aws:iam::aws:policy/service-role/AWSGlueServiceRole"
      custom_policies:
        - s3_data_processing
        - sns_notifications

## Monitoring and Alerting

monitoring:
  # CloudWatch metrics and alarms
  metrics:
    lambda_error_threshold: 1
    lambda_duration_threshold: 240000  # 4 minutes in ms
    glue_failure_threshold: 1
    data_processing_volume_threshold: 10
    cost_threshold_daily: 100.00
  
  # Log analysis queries
  log_insights_queries:
    error_analysis: |
      fields @timestamp, @message, @requestId
      | filter @message like /ERROR/
      | stats count() by bin(5m)
      | sort @timestamp desc
    
    performance_analysis: |
      fields @timestamp, @duration, @billedDuration, @memorySize, @maxMemoryUsed
      | filter @type = "REPORT"
      | stats avg(@duration), max(@duration), min(@duration) by bin(5m)
    
    data_volume_analysis: |
      fields @timestamp, @message
      | filter @message like /Processed.*records/
      | parse @message "Processed * records"
      | stats sum(@1) by bin(1h)

## Data Quality Standards

data_quality:
  # Acceptance criteria
  thresholds:
    completeness_rate: 95.0  # Minimum percentage of non-null required fields
    accuracy_rate: 98.0      # Minimum percentage of records passing validation
    duplicate_rate: 1.0      # Maximum percentage of duplicate records
    timeliness_hours: 24     # Maximum hours for data to be processed
  
  # Quality scoring weights
  scoring_weights:
    completeness: 0.3
    accuracy: 0.4
    consistency: 0.2
    timeliness: 0.1

## Business Rules

business_rules:
  # Healthcare-specific validation rules
  healthcare_claims:
    valid_claim_statuses:
      - submitted
      - processed
      - approved
      - denied
      - pending
      - cancelled
    
    diagnosis_categories:
      infectious: "A*"
      oncology: "C*"
      endocrine: "E*"
      circulatory: "I*"
      respiratory: "J*"
      digestive: "K*"
      musculoskeletal: "M*"
      genitourinary: "N*"
      injury: "S*"
    
    amount_categories:
      low: 0-100
      medium: 100-1000
      high: 1000-10000
      very_high: 10000+
    
    risk_scoring:
      high_risk:
        min_claims: 10
        min_amount: 50000
      medium_risk:
        min_claims: 5
        min_amount: 20000

## Deployment Configuration

deployment:
  # CI/CD pipeline settings
  pipeline:
    build_timeout: 30  # minutes
    test_timeout: 15   # minutes
    deploy_timeout: 45 # minutes
  
  # Environment promotion rules
  promotion_rules:
    dev_to_staging:
      required_tests:
        - unit_tests
        - integration_tests
        - data_validation_tests
      approval_required: false
    
    staging_to_prod:
      required_tests:
        - unit_tests
        - integration_tests
        - data_validation_tests
        - performance_tests
        - security_tests
      approval_required: true
      min_approvers: 2

## Disaster Recovery

disaster_recovery:
  # Backup strategy
  backup:
    frequency: daily
    retention_policy:
      daily: 30    # days
      weekly: 12   # weeks
      monthly: 12  # months
      yearly: 7    # years
  
  # Recovery objectives
  rto: 4   # hours - Recovery Time Objective
  rpo: 1   # hour  - Recovery Point Objective
  
  # Cross-region replication
  replication:
    enabled: true
    target_regions:
      - us-east-1
      - us-west-2
